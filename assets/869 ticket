Yes, that's a great approach — making description and acceptance criteria imperative (e.g., "Should return...", "Must align with...") keeps them action-focused and clear. Keeping them short, implicit, and precise also helps everyone stay on the same page without too much noise.

Here’s how you can phrase them:


---

Ticket Description

The CSRF token API should return the token as a plain string, not JSON. Response content type and schema must reflect this. Header schema (for set-cookie) should also align with the actual response.


---

Acceptance Criteria

Response must be returned as text/plain with the token as raw string

OpenAPI response schema must match updated content type and format

set-cookie header should be accurately typed in the schema

Remove unused or misleading response codes (502, default)



---

For ticket comment before closing, you could say:

> Aligned the CSRF token API response with expected output — updated content type, response schema, and headers definition. Verified and merged to main. Closing this ticket.



Let me know if you want to add testing or frontend context too.

11111111111

Sure! Here's a short and clear Ticket Description and Acceptance Criteria tailored to your update:


---

Ticket Description

The CSRF token API response previously returned a plain string but was documented with a application/json content-type in the OpenAPI spec, causing a mismatch. This update aligns the OpenAPI documentation with the actual behavior by changing the response content-type to text/plain and returning the token using c.text().

Additionally, the response schema and Set-Cookie header schema were updated to match the actual output. Unused status codes (502, default) were removed from the spec.


---

Acceptance Criteria

[x] Response content-type is text/plain in the OpenAPI spec.

[x] CSRF token string is returned using c.text() instead of c.json().

[x] Response schema and header schema correctly describe the returned token and Set-Cookie.

[x] Unused response codes (502, default) are removed from the route spec.

[x] No frontend changes required — the contract remains compatible.


Let me know if you want a summary message to drop in the ticket too.

5672ueue8e

Absolutely! Here's the revised PR Description with that point smoothly included:


---

PR Description

Updated OpenAPI spec to reflect text/plain content-type.

Aligned response schema and header schema to accurately describe the returned data and Set-Cookie header.

Removed unnecessary response codes (502, default) for cleaner spec.

Used c.text() instead of c.json() to return raw string token.

No frontend changes required — API now matches the actual contract.


Let me know if you want a version for the Jira ticket as well!



